repositories {
	mavenCentral()
}
	
allprojects {
    apply plugin: 'idea'
    apply plugin: 'eclipse'
}

subprojects {
	ext {
	    sourceCompatibility = JavaVersion.VERSION_1_7
    	targetCompatibility = JavaVersion.VERSION_1_7
    }

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: "sonar-runner"

    repositories {
        mavenCentral()
    }
	
    sourceSets {
        test {
            output.classesDir = "build/test/classes"
            output.resourcesDir = "build/test/classes"
        }
    }

    dependencies {
        testCompile 'org.easytesting:fest-assert-core:2.0M10'
        testCompile 'org.unitils:unitils-core:3.3'
    }

    task testng(type: Test) {
        useTestNG()

        afterTest { descriptor, result ->
            logger.lifecycle(" TestNG - ${descriptor.className}.${descriptor.name} - ${result.resultType}")
        }
    }

    testng.dependsOn ':runElasticSearchNoWait'

    test {
        afterTest { descriptor, result ->
            logger.lifecycle(" JUnit - ${descriptor.className}.${descriptor.name} - ${result.resultType}")
        }
    }

    test.dependsOn testng

    sonarRunner {
        sonarProperties {
            property "sonar.jacoco.reportPath", "build/jacoco/testng.exec"
        }
    }
}

def runElasticSearchConfig = {
    clusterName = "carsearch"
    nodeName = "StandaloneDataNode"
}

task runElasticSearch(type: RunElasticSearchNodeTask) {
    configure runElasticSearchConfig
    join = true
}

task runElasticSearchNoWait(type: RunElasticSearchNodeTask) {
    configure runElasticSearchConfig
}

def runJettyConfig = {
    dependsOn = [":core:war", ":web:war"]

    wars = ["/core" : "./core/build/libs/core.war"]
    resources = ["/" : "./web/src/main/webapp/"]
}

task runJetty(type: RunJettyTask) {
    configure runJettyConfig
    join = true
}

task runJettyNoWait(type: RunJettyTask) {
    configure runJettyConfig
    join = false
}

task run {
    dependsOn runElasticSearch, runJetty
}
